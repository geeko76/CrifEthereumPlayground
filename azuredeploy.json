{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountNamePrefix": {
      "type": "string",
      "maxLength": 11,
      "defaultValue": "gethsa",
      "metadata": {
        "description": "Name prefix of the Storage Account"
      }
    },
    "vmDnsPrefix": {
      "type": "string",
      "defaultValue": "gethbox",
      "metadata": {
        "description": "This is the unique DNS name of the for the public IP for your VM"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "gethuser",
      "metadata": {
        "description": "This is the the username you wish to assign to your VMs admin account"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "This is the the password you wish to assign to your VMs admin account"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4"
      ],
      "metadata": {
        "description": "Size of VM"
      }
    },
    "totalPeersCount": {
      "type": "int",
      "defaultValue": 6,
      "metadata": {
        "description": "This is the number of desired nodes"
      }
    },
    "minersCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "This is the number of desired miner nodes"
      }
    },
    "devManageCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "This is the number of desired development / management nodes"
      }
    }
  },
  "variables": {
    "nicName": "VMNic",
    "addressPrefix": "10.0.0.0/16",
    "imagePublisher": "Canonical",
    "imageVersion": "latest",
    "imageSKU": "14.04.2-LTS",
    "imageOffer": "UbuntuServer",
    "subnetName": "Subnet-1",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "publicIP",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[parameters('vmDnsPrefix')]",
    "virtualNetworkName": "GETHNET",
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "storageAccountName": "[replace(replace(tolower(concat(parameters('storageAccountNamePrefix'), uniquestring(resourceGroup().id))), '-',''),'.','')]",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountName'), copyIndex())]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      },
      "copy": {
        "name": "storageAccountsCopy",
        "count": "[add(parameters('totalPeersCount'), 1)]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('vmDnsPrefix'), copyIndex())]"
        }
      },
      "copy": {
        "name": "publicIPsCopy",
        "count": "[add(parameters('totalPeersCount'), 1)]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nicsCopy",
        "count": "[add(parameters('totalPeersCount'), 1)]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), copyIndex())]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat('http://',concat(variables('storageAccountName'), copyIndex()),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/','osdisk1.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
            }
          ]
        }
      },
      "copy": {
        "name": "vmsCopy",
        "count": "[parameters('totalPeersCount')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), parameters('totalPeersCount'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), parameters('totalPeersCount'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), parameters('totalPeersCount'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), parameters('totalPeersCount'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat('http://',concat(variables('storageAccountName'), parameters('totalPeersCount')),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/','osdisk1.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), parameters('totalPeersCount')))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(),'/newuserscript')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/geeko76/CrifEthereumPlayground/master/configure-geth.sh"
          ],
          "commandToExecute": "[concat('bash configure-geth.sh ', parameters('adminUsername'), ' ', parameters('adminPassword'), ' ', parameters('minersCount'), ' ',  reference(concat(variables('vmName'), parameters('totalPeersCount'))).dnsName)]"
        }
      },
      "copy": {
        "name": "extCopy",
        "count": "[parameters('totalPeersCount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), parameters('totalPeersCount'),'/newuserscript')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), parameters('totalPeersCount'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/geeko76/CrifEthereumPlayground/master/configure-dev-monitor.sh"
          ],
          "commandToExecute": "[concat('bash configure-geth.sh ', parameters('adminUsername'), ' ', parameters('adminPassword'), ' ', parameters('minersCount'), ' ',  reference(concat(variables('vmName'), parameters('totalPeersCount'))).dnsSettings.fqdn)]"
        }
      }
    }
  ],
  "outputs": {
  }
}
